# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'x00204384'
    scannerMode: 'MSBuild'
    projectKey: 'X00204384_CA3_PlanetWeight'
    projectName: 'CA3_PlanetWeight'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)/SeleniumTests"'
    zipAfterPublish: false
    modifyOutputPath: false

- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*SeleniumTests.csproj'
    arguments: '--configuration $(BuildConfiguration) --output "$(build.artifactstagingdirectory)/SeleniumTests"'
    zipAfterPublish: false
    modifyOutputPath: false

- task: CopyFiles@2
  inputs:
    Contents: '**/*.runsettings'
    TargetFolder: '$(build.artifactstagingdirectory)/SeleniumTests'

- task: CopyFiles@2
  inputs:
    Contents: '**/Perf/perf*.js'
    TargetFolder: '$(build.artifactstagingdirectory)/Perf'
    flattenFolders: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/PlanetWeightTests1.csproj'
    arguments: '--configuration Release --no-build --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Threshold=50 --collect "code coverage"'
    publishTestResults: true

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage.cobertura.xml'

- task: SonarCloudAnalyze@1

- task: SonarCloudPublish@1
  inputs:
    pollingTimeoutSec: '1000'

- task: WhiteSource@21
  inputs:
    cwd: '$(System.DefaultWorkingDirectory)'